{"ast":null,"code":"import _regeneratorRuntime from \"/home/shimaa/reactnd-project-myreads-starter/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/shimaa/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/shimaa/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shimaa/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shimaa/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shimaa/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shimaa/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/shimaa/reactnd-project-myreads-starter/src/Search.js\";\nimport React, { Component } from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport Books from './Books.js';\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      booksToView: []\n    };\n\n    _this.search =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(query) {\n        var foundBooks, booksWithShelfs;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return BooksAPI.search(query);\n\n              case 2:\n                foundBooks = _context.sent;\n                // console.log(foundBooks)\n                booksWithShelfs = foundBooks && !foundBooks.error ? foundBooks.map(function (foundBook) {\n                  if (_this.props.books.some(function (book) {\n                    return book.id === foundBook.id;\n                  })) {\n                    foundBook.shelf = _this.props.books.find(function (book) {\n                      return book.id === foundBook.id;\n                    }).shelf;\n                  }\n\n                  return foundBook;\n                }) : [];\n\n                _this.setState({\n                  booksToView: booksWithShelfs\n                });\n\n                console.log(_this.state.booksToView);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onSearchChangeShelf = function (book, newShelf) {\n      console.log(\"hahaha\");\n\n      var foundBooks = _this.state.booksToView.map(function (foundBook) {\n        if (foundBook.id === book.id) {\n          foundBook.shelf = newShelf;\n        }\n\n        return foundBook;\n      });\n\n      console.log(book);\n      console.log(foundBooks);\n\n      _this.setState({\n        booksToView: foundBooks\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"close-search\",\n        onClick: this.props.onClosed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: function onChange(event) {\n          return _this2.search(event.target.value);\n        },\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.state.booksToView.map(function (book) {\n        return React.createElement(Books, {\n          book: book,\n          onChangeShelf: _this2.props.onChangeShelf,\n          key: book.id,\n          searchBook: true,\n          onChangeSearchBook: _this2.onSearchChangeShelf,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/home/shimaa/reactnd-project-myreads-starter/src/Search.js"],"names":["React","Component","BooksAPI","Books","Search","state","booksToView","search","query","foundBooks","booksWithShelfs","error","map","foundBook","props","books","some","book","id","shelf","find","setState","console","log","onSearchChangeShelf","newShelf","onClosed","event","target","value","onChangeShelf"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport Books from './Books.js'\nclass Search extends Component {\n    state = {\n        booksToView :[]\n    }\n    search = async (query)=>{\nconst foundBooks = await BooksAPI.search(query)\n     // console.log(foundBooks)\n      let booksWithShelfs =  foundBooks && !foundBooks.error ? foundBooks.map(foundBook => {\n          if (this.props.books.some(book=> book.id === foundBook.id)){\n              foundBook.shelf = this.props.books.find(book=> book.id === foundBook.id).shelf\n          }\n          return foundBook\n          \n      }) : []\n\n      this.setState({booksToView : booksWithShelfs})\n      console.log(this.state.booksToView)\n      \n    }\n    onSearchChangeShelf=(book,newShelf)=>{\n      console.log(\"hahaha\")\n     let foundBooks = this.state.booksToView.map(foundBook=> {\n        if(foundBook.id === book.id){\n          foundBook.shelf = newShelf\n        }\n        return foundBook\n      })\n      console.log(book)\n      console.log(foundBooks)\n      this.setState({booksToView : foundBooks})\n\n      }\n    \n    render(){\n        return(\n            <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n              <button className=\"close-search\" onClick={this.props.onClosed}>Close</button>\n              <div className=\"search-books-input-wrapper\">\n              \n                <input onChange = {(event)=>this.search(event.target.value)} type=\"text\" placeholder=\"Search by title or author\"/>\n                 \n              </div>\n            </div>\n            <div className=\"search-books-results\">\n              <ol className=\"books-grid\">\n                  {\n                    this.state.booksToView.map(book =>(\n                        <Books book = {book} onChangeShelf ={this.props.onChangeShelf} key = {book.id} searchBook = {true} onChangeSearchBook= {this.onSearchChangeShelf}/>\n                    ))\n                  }\n              </ol>\n            </div>\n          </div>\n        )\n    }\n}\nexport default Search;"]},"metadata":{},"sourceType":"module"}